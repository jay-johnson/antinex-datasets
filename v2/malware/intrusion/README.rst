===============================
Building a Dataset from Malware
===============================

This guide is for preparing a dataset to train a deep neural network (dnn) for predicting malware coming in over ssh and telnet. The accuracy is currently **TBD this is a work in progress**. You can tune your dnn using the `REST API <https://github.com/jay-johnson/train-ai-with-django-swagger-jwt>`__:

Common Setup
============

#.  Run these commands to clone the repositories on the defender(s), attackers:

    ::

        mkdir -p /opt/antinex
        git clone https://github.com/jay-johnson/antinex-core /opt/antinex/core

#.  Run the Installer

    This installer will deploy and set up the AntiNex repositories inside **/opt/antinex**.
    
    ::

        /opt/antinex/core/docker/install-on-host.sh
        
        Welcome - Starting install: 2018-04-16 22:01:45 
        
        
                db                              88  888b      88                          
               d88b                      ,d     88  8888b     88                          
              d8  8b                     88         88  8b    88                          
             d8    8b      8b,dPPYba,  MM88MMM  88  88   8b   88   ,adPPYba,  8b,     ,d8 
            d8YaaaaY8b     88P'     8a   88     88  88    8b  88  a8P_____88    Y8, ,8P   
           d88******88b    88       88   88     88  88     8b 88  8PP******      )888(    
          d8          8b   88       88   88,    88  88      8888  *8b,   ,aa   ,d8   8b,  
         d8            8b  88       88   *Y888  88  88       888   *Ybbd88*   8P       Y8  

#.  Updating

    You can use the same ``install-on-host.sh`` tool to pull down updates for all AntiNex components. It is the recommended tool for syncing the latest updates across many vms by passing ``update`` on the command line arguments or setting the env flag: ``export UPDATE=1`` before running.

    ::

        /opt/antinex/core/docker/install-on-host.sh update

        Welcome - Update started: 2018-04-17 01:41:29 
        
Defender Setup
==============

Start Services
--------------

With the platform installed in **/opt/antinex** across all **defender** hosts, please set up the host with the following steps:

#.  Rename Commands

    The malware uses these commands to delete data on disk. As root, here's how to prevent it from doing harm:

    ::

        sudo su

    ::

        which busybox
        /bin/busybox

    ::

        mv /bin/busybox /bin/busybox_org

    ::

        which fdisk
        /sbin/fdisk

    ::

        mv /sbin/fdisk /sbin/fdisk_org

    ::

        which dd
        /bin/dd

    ::

        mv /bin/dd /bin/dd_org

#.  Confirm the Commands are Not on the Path

    ::

        which dd
        which fdisk
        which busybox

#.  Telnet Server Listening on TCP port 23

    As root, create a new, insecure ``admin``` user with the password **admin** or something else you want to use.

    .. danger:: The intrusion malware **will use this account to log in to the defender(s)**. Please do not use ANY computer or property you are not 100% comfortable turning into a worthless, non-functional computer, host or vm. Treat this software with care and do not run this anywhere with sensitive data or information.

    ::

        sudo su
        useradd -m -p $(openssl passwd -1 admin) -s /bin/bash admin

    Confirm you can login to that user not as root:

    ::

        jay@defend1: su admin
        Password: 
        admin@defend1:

    Install the telnet packages for your host. Here is how to install it on Ubuntu:

    ::

        sudo su
        apt-get install xinetd telnetd 
        echo "telnet stream tcp nowait telnetd /usr/sbin/tcpd /usr/sbin/in.telnetd" >> /etc/inetd.conf

    As root, overwrite the ``/etc/xinetd.conf`` with the following contents:

    ::

        # Simple configuration file for xinetd
        #
        # Some defaults, and include /etc/xinetd.d/
        defaults
        {
            # Please note that you need a log_type line to be able to use log_on_success
            # and log_on_failure. The default is the following :
            # log_type = SYSLOG daemon info
            instances               = 60
            log_type                = SYSLOG authpriv
            log_on_success          = HOST PID EXIT DURATION
            log_on_failure          = HOST
            cps                     = 25 30
        }

    As root, add the following line to the ``/etc/services`` if it is not already there:

    ::

        telnet        23/tcp

    As root edit the telnet banner to make the defender(s) look like a D-Link router host (there are many devices this malware targets, I just picked one at random):

    ::

        vi /etc/issue.net

    Paste these contents into ``/etc/issue.net``

    ::

        BCM96328 Broadband

    Start Telnet

    ::

        /etc/init.d/xinetd restart 

#.  SSH Server Listening on TCP port 22

    On Ubuntu 17 you can use systemd with the command:

    ::

        sudo systemctl start ssh
        sudo systemctl enable ssh
        sudo systemctl status ssh

#.  Watch the Telnet Logs

    On Ubuntu 17, telnet sends logs to the file: **/var/log/auth.log**. You can watch the logs during the simulation with:

    ::

        tail -f /var/log/auth.log
        Apr 21 13:50:13 defend1 xinetd[3367]: START: telnet pid=3369 from=::ffff:192.168.0.32
        Apr 21 13:50:14 defend1 xinetd[3367]: START: telnet pid=3370 from=::ffff:192.168.0.32
        Apr 21 13:50:26 defend1 xinetd[3367]: EXIT: telnet status=1 pid=3369 duration=13(sec)
        Apr 21 13:50:26 defend1 xinetd[3367]: EXIT: telnet status=1 pid=3370 duration=12(sec)

Attacker Setup
==============

Attackers are going to try to use ssh and telnet credentials to login to the defenders using the hardcoded **admin/admin** user credentials like on non-secured **BCM96328 Broadband** device.

.. note:: Googling for this device has many, old articles like: `HOW to HACK into Broadband ADSL Modem (Router) and get the BroadBand User ID and Password!! <https://technochat.in/2010/11/how-to-hack-into-broadband-adsl-modem-router-and-get-the-broadband-user-id-and-password/>`__

Install Docker
--------------

Please refer to the docker docs for more information on installing docker on your hosts:

https://docs.docker.com/install/

Please refer to the docker-compose docs for more information on installing docker-compose on your hosts:

https://docs.docker.com/compose/install/

For reference, docker-ce is installed on all attacker, defender and stack hosts.

::

    docker --version
    Docker version 17.12.0-ce, build c97c6d6

Clone and Repo
--------------

These commands will pull in `Nerfball repository <https://github.com/jay-johnson/nerfball>`__ which we will use to build the malware's local jail.

::

    git clone https://github.com/jay-johnson/nerfball.git /opt/antinex/nerfball

.. danger:: Please be careful where you are running this VM. This next command will build a docker container and download the malware: https://raw.githubusercontent.com/JeremyNGalloway/mod_plaintext.py/f671e74c688ab06e48d8ab0bde5d949afe75fd86/mod_plaintext.py


Build the Nerfball Container Jail

::

    cd /opt/antinex/nerfball
    ./build.sh

Confirm the Nerfball Container Runs

::

    ./start.sh

SSH into the Nerfball

::

    ./ssh.sh 
    (venv) root:/opt/nerfball# ls
    README.rst           nerfball.egg-info    tox.ini
    build                setup.cfg            venv
    nerfball             setup.py
    nerfball-latest.tgz  tests


Connectivity
------------

#.  Confirm SSH Connectivity

    From each attack host, verify connectivity to each defender using ssh

    ::

        ssh root@defend1
        root@defend1's password: 

#.  Confirm Telnet Connectivity

    From each attack host, verify connectivity to each defender using telnet and a user that works for logging in.

    ::

        telnet defend1.antinex 23
        Trying 192.168.0.12...
        Connected to defend1.
        Escape character is '^]'.
        BCM96328 Broadband
        defend1.antinex login: admin
        Password: 
        Last login: Mon Apr 16 23:00:37 PDT 2018 from attack1 on pts/2
        Welcome to Ubuntu 17.10 (GNU/Linux 4.13.0-16-generic x86_64)

        * Documentation:  https://help.ubuntu.com
        * Management:     https://landscape.canonical.com
        * Support:        https://ubuntu.com/advantage

        * Meltdown, Spectre and Ubuntu: What are the attack vectors,
        how the fixes work, and everything else you need to know
        - https://ubu.one/u2Know

        3 packages can be updated.
        0 updates are security updates.

        BCM96328 Broadband
        To run a command as administrator (user "root"), use "sudo <command>".
        See "man sudo_root" for details.

#.  Confirm Commands are Not on the Path for all Defenders

    From an attacker host, login to all defenders and confirm the following commands are no longer on the **admin** user's PATH

    ::

        admin@defend1:~$ which dd
        admin@defend1:~$ which fdisk
        admin@defend1:~$ which busybox
        admin@defend1:~$

Make Backups of all VMs
=======================

Take a few minutes to back up all these vms. It takes time to get them set up, and the backups will make the test bed easier to restore if something goes badly or a prep step was missed by accident.

Simulation - Functional Integration Test
========================================

Let's start testing by making sure just 1 attacker can target 1 defender. Once that is confirmed as working, we will confirm the captured packets from the defender are being processed on the stack **webapp** host by the **pipeline** container.

#.  Login to Attack 1

#.  Start the Container

    ::

        ./start.sh

#.  SSH into the Container

    ::

        ./ssh.sh

#.  Target Defender

(Optional) Prepare Attack Dataset
---------------------------------

If you want to prepare your own attack dataset run these commands with the REST API running locally:

::

    source ~/.venvs/venvdrfpipeline/bin/activate
    ~/train-ai-with-django-swagger-jwt/tests/build-new-dataset.py -f /opt/antinex-datasets/v2/malware/internetchemo/configs/only-prepare-attack.json

Check the files were updated:

::

    ls -l /opt/antinex-datasets/v2/malware/internetchemo/inputs/attack/

(Optional) Prepare Full Dataset
-------------------------------

If you want to prepare your own full dataset run these commands with the REST API running locally:

::

    source ~/.venvs/venvdrfpipeline/bin/activate
    ~/train-ai-with-django-swagger-jwt/tests/build-new-dataset.py -f /opt/antinex-datasets/v2/malware/internetchemo/configs/prepare.json

(Optional) Convert Recordings into a Dataset
--------------------------------------------

If you want to prepare your own dataset from recorded packets stored in csv files (by default in ``/tmp/*.csv``) run these commands with the REST API running locally:

::

    source ~/.venvs/venvdrfpipeline/bin/activate
    ~/train-ai-with-django-swagger-jwt/tests/build-new-dataset.py -f /opt/antinex-datasets/v2/malware/internetchemo/configs/convert-recordings-to-dataset.json

Confirm Dataset is Ready
------------------------

::

    /opt/antinex-datasets/tools/describe-v1-training.py /opt/antinex-datasets/v2/malware/internetchemo/training-ready/v2_malware_ic_cleaned.csv 

Hopefully your dataset has both attack and non-attack records like:

::

    TBD

What you don't want to see is this in the output:

::

    TBD

That means the prepare step failed to add the attack data into the dataset correctly. Please go back to the ``Prepare Dataset`` step and review paths to the files are correct.

Train Dataset
-------------

::

    source ~/.venvs/venvdrfpipeline/bin/activate
    ~/train-ai-with-django-swagger-jwt/tests/create-keras-dnn.py -f /opt/antinex-datasets/v2/malware/internetchemo/configs/train.json

From the logs taken during creation of this doc, the model is 70% accurate at predicting attack records.


Get the Deep Neural Network Accuracy, JSON and Weights
------------------------------------------------------

This will display all the recent training runs in a list sorted by newest.

::

    ~/train-ai-with-django-swagger-jwt/tests/get-recent-results.py 

Here's the training node in the list from the run above (yours will look a little different):

::

    TBD
